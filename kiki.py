import telebot
import sqlite3
from pyexpat.errors import messages
from telebot.apihelper import ApiTelegramException
from telebot.util import content_type_media
from telebot import types

bot = telebot.TeleBot('7951477708:AAHna6k34mKZNaLm3Yh4Nxk-3kKftSX2Hhw', skip_pending=True)
admin = ['1389316365' , 'mops' , '379313116', 'Aleksandr']
name_of_user=None
city_user=None
car_name=None
year_auto=None
capacity_engine_auto=None
fuel_type_auto=None
drive_type_auto=None
mileage_auto=None
color_auto=None
allowed_car_auto=None
budget_auto=None
data_contact_auto=None
questionn=None

@bot.message_handler(commands=['start'])
def start(message):
    conn = sqlite3.connect('carmax3.sql')
    cur = conn.cursor()

    cur.execute('''CREATE TABLE IF NOT EXISTS tickets (id INTEGER PRIMARY KEY AUTOINCREMENT, nameuser VARCHAR(50), cityuser VARCHAR(50), carname VARCHAR(50), yearp VARCHAR(10), capacity VARCHAR(40), fuel VARCHAR(50), drive VARCHAR(50), mileage VARCHAR(50), color VARCHAR(50), allowedcar VARCHAR(50),budget VARCHAR(50), datacontact VARCHAR(50), questions VARCHAR(200) DEFAULT NULL)''')
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, f'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name}!\n–Ø ü§ñ‚Äî –æ–Ω–ª–∞–π–Ω-–ø–æ–º–æ—â–Ω–∏–∫ —ç–∫—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ CarMax. –ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∏–∂–µ ‚Äî —ç—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ 2 –º–∏–Ω—É—Ç—ã.\nüîπ –ñ–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É"üëá\n\n–ï—Å–ª–∏ –≤—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–∞ Encar.com, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏.\nüîπ –ñ–º–∏—Ç–µ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"üëá')
    menu(message)
    return


def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    if str(message.from_user.id) or str(call.message.from_user.id) in admin and message.from_user.first_name or call.message.from_user.first_name in admin:
        btn1 = types.KeyboardButton('üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë')
        btn2 = types.KeyboardButton('‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì')
        btn3 = types.KeyboardButton('üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ')
        btn4 = types.KeyboardButton('üì©–ó–∞—è–≤–∫–∏üì©')
        btn5 = types.KeyboardButton('‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã‚ÅâÔ∏è')
        btn6 = types.KeyboardButton('üì¢–ù–ê–® TELEGRAMüì¢')
        markup.row(btn1, btn2)
        markup.row(btn3, btn6)
        markup.row(btn4, btn5)
    else:
        btn1 = types.KeyboardButton('üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë')
        btn2 = types.KeyboardButton('‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì')
        btn3 = types.KeyboardButton('üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ')
        btn6 = types.KeyboardButton('üì¢–ù–ê–® TELEGRAMüì¢')
        markup.row(btn1, btn2)
        markup.row(btn3, btn6)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
    bot.register_next_step_handler(message, on_click)
    return


def on_click(message):
    if message.text == 'üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë':
        ticket_create(message)
    elif message.text == '‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì':
        make_question(message)
    elif message.text == 'üì©–ó–∞—è–≤–∫–∏üì©':
        tickets(message)
    elif message.text == 'üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ':
        buy_process(message)
    elif message.text == '‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã‚ÅâÔ∏è':
        questions(message)
    elif message.text == 'üì¢–ù–ê–® TELEGRAMüì¢':
        transition(message)

def notification_ticket(message):
    chat_id = 1389316365
    chat_id2 = 379313116# –°—é–¥–∞ –ø–æ–º–µ—â–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(chat_id, '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!')
    bot.send_message(chat_id2, '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!')

def notification_question(message):
    chat_id = 1389316365
    chat_id2 = 379313116 # –°—é–¥–∞ –ø–æ–º–µ—â–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º—É –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(chat_id, f'–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å: {message.text}')
    bot.send_message(chat_id2, f'–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å: {message.text}')

def transition(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏', url = 'https://t.me/+035XTmuA4kY1ZGRl'))
    markup.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data = 'cancel'))
    bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª?', reply_markup=markup)

def buy_process(message):
    bot.send_message(message.chat.id, '–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ –∞–≤—Ç–æ –∏–∑ –ö–æ—Ä–µ–∏:\n\n'
                                      '1. –°–≤—è–∑—ã–≤–∞–µ–º—Å—è, –æ–±—Å—É–∂–¥–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º Encar.com, –∞—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö –ø–ª–æ—â–∞–¥–∫–∏ –∏ –¥—Ä—É–≥–∏–µ —Å–∞–π—Ç—ã, –≤—ã–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º—Å—è —Å–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é. –í—ã –º–æ–∂–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å 2-3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø—Ä–æ–∑–≤–æ–Ω–∞.\n'
                                      '2. –ï—Å–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç, –≤—ã –≤–Ω–æ—Å–∏—Ç–µ –∑–∞–¥–∞—Ç–æ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ 50 000 —Ä—É–±. (—ç—Ç–æ–π —Å—É–º–º–æ–π –º—ã –¥–µ–ª–∞–µ–º –±—Ä–æ–Ω—å –∑–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å) –Ω–∞ –∫–∞—Ä—Ç—É –°–±–µ—Ä–±–∞–Ω–∫–∞ –∏–ª–∏ –¢–∏–Ω—å–∫–æ—Ñ—Ñ. –ó–∞—Ç–µ–º –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –æ—Å–º–æ—Ç—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–¥–æ 3 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤),¬† –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é —á–∏—Å—Ç–æ—Ç—É –∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–ª—É—á–∞–∏. –ï—Å–ª–∏ –∏–∑ 3 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞–º –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∞–º —Ñ–æ—Ç–æ- –∏ –≤–∏–¥–µ–æ–æ—Ç—á—ë—Ç—ã –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è. –ï—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ, –º—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å. \n'
                                      '3. –°–¥–µ–ª–∫–∞: –∑–∞–∫–ª—é—á–∞–µ–º –¥–æ–≥–æ–≤–æ—Ä, —è –æ—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞–º –∏–Ω–≤–æ–π—Å. –í—ã –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –°–æ–ª–∏–¥ –±–∞–Ω–∫ –∏–ª–∏ –¥—Ä—É–≥–æ–π –±–∞–Ω–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –Æ–∂–Ω—É—é –ö–æ—Ä–µ—é –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê. –í —Ç–µ—á–µ–Ω–∏–µ 3-5 –¥–Ω–µ–π –ø–æ–ª—É—á–∞–µ–º –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ –≤—ã–∫—É–ø–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å. \n'
                                      '4. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ (—Å–Ω—è—Ç–∏–µ —Å —É—á—ë—Ç–∞, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∏ —Ç–∞–º–æ–∂–Ω–∏, —Å–Ω—è—Ç–∏–µ —Ç–æ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Ç.–¥.). –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–ª–∞—Ç—É, –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –∑–∞–º–µ–Ω–∏—Ç—å —à–∏–Ω—ã, –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä—É—Å–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ —Ç.–¥. \n'
                                      '5. –ü–æ—Å–ª–µ –ø—Ä–∏–±—ã—Ç–∏—è –≤–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ –º—ã —Å–≤—è–∑—ã–≤–∞–µ–º –≤–∞—Å —Å –Ω–∞—à–∏–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º. –û–Ω –±—É–¥–µ—Ç –∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å—Ç–∞–º–æ–∂–∫–∏, –ø–æ–ª—É—á–µ–Ω–∏—è –°–ë–ö–¢–° –∏ –ü–¢–° –Ω–∞ –≤–∞—à–µ –∏–º—è, –∞ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –≤–∞—à –≥–æ—Ä–æ–¥ –Ω–∞ –∞–≤—Ç–æ–≤–æ–∑–µ. –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–∞ –¥–æ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ 250 000 —Ä—É–±., –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –∏ –≥–∞–±–∞—Ä–∏—Ç–æ–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è. –î–æ—Å—Ç–∞–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –∞–≤—Ç–æ–≤–æ–∑–æ–º –∏–ª–∏ –ø–æ –∂–µ–ª–µ–∑–Ω–æ–π –¥–æ—Ä–æ–≥–µ. –í–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç 1-1,5 –º–µ—Å—è—Ü–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –æ–ø–ª–∞—Ç—ã –≤ –ö–æ—Ä–µ—é. \n\n'
                                      '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç—Ä–∏ —ç—Ç–∞–ø–∞ –ø–æ—Å–ª–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞: \n\n'
                                      '1) –í–Ω–æ—Å–∏—Ç–µ –∑–∞–¥–∞—Ç–æ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ 50 000 —Ä—É–±. –Ω–∞ –∫–∞—Ä—Ç—É. \n'
                                      '2) –û–ø–ª–∞—Ç–∞ –∏–Ω–≤–æ–π—Å–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê (—Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è + —Ä–∞—Å—Ö–æ–¥—ã –ø–æ –ö–æ—Ä–µ–µ) –†–∞—Å—Ö–æ–¥—ã –ø–æ –ö–æ—Ä–µ–µ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç 2–º–ª–Ω. –∫–æ—Ä–µ–π—Å–∫–∏—Ö –≤–æ–Ω, –ø—Ä–∏–º–µ—Ä–Ω–æ 1400$ (–∫–æ–º–∏—Å—Å–∏—è –¥–∏–ª–µ—Ä–∞, –ø–µ—Ä–µ–≥–æ–Ω –∞–≤—Ç–æ, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø–∞—Ä–æ–º/—Å—Ç–∏–≤–∏–¥–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã)\n'
                                      '3) –û–ø–ª–∞—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –≤–æ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫–µ (—Ç–∞–º–æ–∂–µ–Ω–Ω–∞—è –ø–æ—à–ª–∏–Ω–∞, —Ç–∞–º–æ–∂–µ–Ω–Ω—ã–π —Å–±–æ—Ä, —É—Ç–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–±–æ—Ä –∏ —Ç.–¥.).  ')
    menu(message)


def make_question(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´'))

    conn = sqlite3.connect('carmax3.sql')
    cur = conn.cursor()

    cur.execute('''CREATE TABLE IF NOT EXISTS tickets (id INTEGER PRIMARY KEY AUTOINCREMENT, nameuser VARCHAR(50), cityuser VARCHAR(50), carname VARCHAR(50), yearp VARCHAR(10), capacity VARCHAR(40), fuel VARCHAR(50), drive VARCHAR(50), mileage VARCHAR(50), color VARCHAR(50), allowedcar VARCHAR(50),budget VARCHAR(50), datacontact VARCHAR(50), questions VARCHAR(200) DEFAULT NULL)''')
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, '–û—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å Encar.com üöó –∏–ª–∏ –∑–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚ùì ‚Äî –º—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –≤—Å—ë –ø–æ—Å—á–∏—Ç–∞–µ–º –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è ‚è∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì± –∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ (Telegram, WhatsApp, Viber) üí¨. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! üôè', reply_markup=markup)
    bot.register_next_step_handler(message, question_taker)


def question_taker(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return

    global questionn
    questionn = message.text.strip()

    conn = sqlite3.connect('carmax3.sql')
    cur = conn.cursor()

    cur.execute("INSERT INTO tickets (questions) VALUES (?)",(questionn,))
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id,'ü§ù –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. \n\n‚òÄÔ∏è–•–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è!')
    notification_question(message)
    menu(message)

@bot.message_handler(commands=['questions'])
def questions(message):
    if str(message.from_user.id) in admin and message.from_user.first_name in admin:
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('–î–∞', callback_data='questions')
        btn2 = telebot.types.InlineKeyboardButton('–ù–µ—Ç', callback_data='cancel')
        markup.row(btn1, btn2)

        bot.send_message(message.chat.id,'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤?',reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
        menu(message)


def ticket_create(message):

    conn = sqlite3.connect('carmax3.sql')
    cur = conn.cursor()

    cur.execute('''CREATE TABLE IF NOT EXISTS tickets (id INTEGER PRIMARY KEY AUTOINCREMENT, nameuser VARCHAR(50), cityuser VARCHAR(50), carname VARCHAR(50), yearp VARCHAR(10), capacity VARCHAR(40), fuel VARCHAR(50), drive VARCHAR(50), mileage VARCHAR(50), color VARCHAR(50), allowedcar VARCHAR(50),budget VARCHAR(50), datacontact VARCHAR(50), questions VARCHAR(200))''')
    conn.commit()
    cur.close()
    conn.close()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´'))

    bot.send_message(message.chat.id, '–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?',reply_markup=markup)
    bot.register_next_step_handler(message, nameuser)

@bot.message_handler(commands=['tickets'])
def tickets(message):
    if str(message.from_user.id) in admin and message.from_user.first_name in admin:
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('–î–∞', callback_data='tickets')
        btn2 = telebot.types.InlineKeyboardButton('–ù–µ—Ç', callback_data='cancel')
        markup.row(btn1, btn2)

        bot.send_message(message.chat.id,'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫?',reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
        menu(message)

def clear_check(message):
    if str(message.from_user.id) in admin and message.from_user.first_name in admin:
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('–î–∞', callback_data='clear_list')
        btn2 = telebot.types.InlineKeyboardButton('–ù–µ—Ç', callback_data='cancel')
        markup.row(btn1, btn2)

        bot.send_message(message.chat.id,'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫?',reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')
        menu(message)

def clear_list(message):
    try:
        if message.text == 'üö´–û—á–∏—Å—Ç–∏—Ç—åüö´':
            clear_check(message)
        elif message.text == 'üî¥–ú–µ–Ω—éüî¥':
            menu(message)
    except sqlite3.OperationalError:
        bot.send_message(message.chat.id, '–¢–∞–±–ª–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        menu(message)


def cityuser(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)
    global city_user
    city_user = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?(–º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å)')
    bot.register_next_step_handler(message, carname)

def nameuser(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)
    global name_of_user
    name_of_user = message.text.strip()
    bot.send_message(message.chat.id, '–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?')
    bot.register_next_step_handler(message, cityuser)

def carname(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global car_name
    car_name = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞?')
    bot.register_next_step_handler(message, year)

def year(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global year_auto
    year_auto = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –æ–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è?')
    bot.register_next_step_handler(message, capacity)

def capacity(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global capacity_engine_auto
    capacity_engine_auto = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —Ç–∏–ø —Ç–æ–ø–ª–∏–≤–∞ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?')
    bot.register_next_step_handler(message, fuel_type)

def fuel_type(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global fuel_type_auto
    fuel_type_auto = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –ø—Ä–∏–≤–æ–¥ –Ω—É–∂–µ–Ω? (2WD / 4WD / –ó–∞–¥–Ω–∏–π / –ü–µ—Ä–µ–¥–Ω–∏–π)')
    bot.register_next_step_handler(message, drive_type)

def drive_type(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global drive_type_auto
    drive_type_auto = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—Ä–æ–±–µ–≥?')
    bot.register_next_step_handler(message, mileage)

def mileage(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global mileage_auto
    mileage_auto = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —Ü–≤–µ—Ç —Å–∞–ª–æ–Ω–∞ –∏ –∫—É–∑–æ–≤–∞ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?')
    bot.register_next_step_handler(message, color)

def color(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global color_auto
    color_auto = message.text.strip()
    bot.send_message(message.chat.id, '–î–æ–ø—É—Å—Ç–∏–º—ã –ª–∏ –æ–∫—Ä–∞—à–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏–ª–∏ –∑–∞–º–µ–Ω—ë–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã?')
    bot.register_next_step_handler(message, allowed_car)

def allowed_car(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global allowed_car_auto
    allowed_car_auto = message.text.strip()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ?')
    bot.register_next_step_handler(message, budget)

def budget(message):
    if message.text == 'üö´–û—Ç–º–µ–Ω–∞üö´':
        menu(message)
        return
#    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
#    btn1 = types.KeyboardButton('üö´–û—Ç–º–µ–Ω–∞üö´')
#    markup.row(btn1)

    global budget_auto
    budget_auto = message.text.strip()
    bot.send_message(message.chat.id, '–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∏ —É–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏ (Telegram, WhatsApp, Viber)')
    bot.register_next_step_handler(message, data_contact)

def data_contact(message):
    global data_contact_auto
    data_contact_auto = message.text.strip()

    conn = sqlite3.connect('carmax3.sql')
    cur = conn.cursor()

    cur.execute("INSERT INTO tickets (nameuser, cityuser, carname, yearp, capacity, fuel, drive, mileage, color, allowedcar, budget,datacontact) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",(name_of_user, city_user, car_name, year_auto, capacity_engine_auto, fuel_type_auto, drive_type_auto, mileage_auto, color_auto, allowed_car_auto, budget_auto, data_contact_auto))
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id,'ü§ù –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –±—ã—Å—Ç—Ä–µ–µ –∏ —Ç–æ—á–Ω–µ–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. \n\n‚òÄÔ∏è–•–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è!')
    notification_ticket(message)
    menu(message)


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    global admin
    if call.data == 'tickets':
        try:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn1 = types.KeyboardButton('üö´–û—á–∏—Å—Ç–∏—Ç—åüö´')
            btn2 = types.KeyboardButton('üî¥–ú–µ–Ω—éüî¥')
            markup.row(btn1, btn2)

            conn = sqlite3.connect('carmax3.sql')
            cur = conn.cursor()

            cur.execute('SELECT * FROM tickets')
            tickets = cur.fetchall()

            info = ''
            for el in tickets:
                if el[1] != None:
                    info += f'#Ô∏è‚É£–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {el[0]}\n üòÄ–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {el[1]}\n üåÅ–ì–æ—Ä–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞: {el[2]}\n üöó–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã: {el[3]}\n ‚åõ–ì–æ–¥ –º–∞—à–∏–Ω—ã: {el[4]}\n ‚öôÔ∏è–û–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {el[5]}\n ‚õΩ–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞: {el[6]}\n üîß–ü—Ä–∏–≤–æ–¥: {el[7]}\n üõ£Ô∏è–ü—Ä–æ–±–µ–≥: {el[8]}\n üé®–¶–≤–µ—Ç –∫—É–∑–æ–≤–∞/—Å–∞–ª–æ–Ω–∞: {el[9]}\n üõ†Ô∏è–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∫–æ—Å—è–∫–∏: {el[10]}\n üí∏–ë—é–¥–∂–µ—Ç: {el[11]}\n ‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞: {el[12]}\n\n'

            cur.close()
            conn.close()

            bot.send_message(call.message.chat.id, info , reply_markup=markup)
            bot.register_next_step_handler(call.message, clear_list)
        except (sqlite3.OperationalError, telebot.apihelper.ApiTelegramException):
            bot.send_message(call.message.chat.id, '–¢–∞–±–ª–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn1 = types.KeyboardButton('üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë')
            btn2 = types.KeyboardButton('‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì')
            btn3 = types.KeyboardButton('üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ')
            btn4 = types.KeyboardButton('üì©–ó–∞—è–≤–∫–∏üì©')
            btn5 = types.KeyboardButton('‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã‚ÅâÔ∏è')
            btn6 = types.KeyboardButton('üì¢–ù–ê–® TELEGRAMüì¢')
            markup.row(btn1, btn2)
            markup.row(btn3. btn4)
            markup.row(btn5, btn6)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
            bot.register_next_step_handler(call.message, on_click)
    elif call.data == 'cancel':
        menu(call.message)
        return
    elif call.data == 'questions':
        try:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn1 = types.KeyboardButton('üö´–û—á–∏—Å—Ç–∏—Ç—åüö´')
            btn2 = types.KeyboardButton('üî¥–ú–µ–Ω—éüî¥')
            markup.row(btn1, btn2)

            conn = sqlite3.connect('carmax3.sql')
            cur = conn.cursor()

            cur.execute('SELECT * FROM tickets')
            tickets = cur.fetchall()

            info = ''
            for el in tickets:
                if el[13] != None:
                    info += f'–í–æ–ø—Ä–æ—Å ‚Ññ{el[0]}: {el[13]}\n\n'

            cur.close()
            conn.close()

            bot.send_message(call.message.chat.id, info, reply_markup=markup)
            bot.register_next_step_handler(call.message, clear_list)
        except (sqlite3.OperationalError, telebot.apihelper.ApiTelegramException):
            bot.send_message(call.message.chat.id, '–í–æ–ø—Ä–æ—Å–æ–≤ —Å–µ–π—á–∞—Å –Ω–µ—Ç')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

            btn1 = types.KeyboardButton('üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë')
            btn2 = types.KeyboardButton('‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì')
            btn3 = types.KeyboardButton('üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ')
            btn4 = types.KeyboardButton('üì©–ó–∞—è–≤–∫–∏üì©')
            btn5 = types.KeyboardButton('‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã‚ÅâÔ∏è')
            btn6 = types.KeyboardButton('üì¢–ù–ê–® TELEGRAMüì¢')
            markup.row(btn1, btn2)
            markup.row(btn3, btn4)
            markup.row(btn5, btn6)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
            bot.register_next_step_handler(call.message, on_click)
            return
    elif call.data == 'clear_list':
        try:
            conn = sqlite3.connect('carmax3.sql')
            cur = conn.cursor()

            cur.execute('DROP TABLE IF EXISTS tickets')
            conn.commit()
            cur.close()
            conn.close()
            bot.send_message(call.message.chat.id, '–¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn1 = types.KeyboardButton('üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë')
            btn2 = types.KeyboardButton('‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì')
            btn3 = types.KeyboardButton('üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ')
            btn4 = types.KeyboardButton('üì©–ó–∞—è–≤–∫–∏üì©')
            btn5 = types.KeyboardButton('‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã‚ÅâÔ∏è')
            btn6 = types.KeyboardButton('üì¢–ù–ê–® TELEGRAMüì¢')
            markup.row(btn1, btn2)
            markup.row(btn3, btn4)
            markup.row(btn5, btn6)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
            bot.register_next_step_handler(call.message, on_click)
            return
        except sqlite3.OperationalError:
            bot.send_message(call.message.chat.id, '–¢–∞–±–ª–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            btn1 = types.KeyboardButton('üìë–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—Éüìë')
            btn2 = types.KeyboardButton('‚ùì–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì')
            btn3 = types.KeyboardButton('üîÑ–ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏üîÑ')
            btn4 = types.KeyboardButton('üì©–ó–∞—è–≤–∫–∏üì©')
            btn5 = types.KeyboardButton('‚ÅâÔ∏è–í–æ–ø—Ä–æ—Å—ã‚ÅâÔ∏è')
            btn6 = types.KeyboardButton('üì¢–ù–ê–® TELEGRAMüì¢')
            markup.row(btn1, btn2)
            markup.row(btn3, btn4)
            markup.row(btn5, btn6)
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
            bot.register_next_step_handler(call.message, on_click)
            return


bot.infinity_polling(skip_pending=True)
